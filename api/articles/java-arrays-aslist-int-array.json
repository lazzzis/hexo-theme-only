{"title":"Java Arrays.asList 转化 int 数组为 List","slug":"java-arrays-aslist-int-array","date":"2016-02-09T14:40:01.000Z","updated":"2017-07-30T05:48:51.000Z","comments":true,"excerpt":"","content":"<h1 id=\"问题的发现\"><a href=\"#问题的发现\" class=\"headerlink\" title=\"问题的发现\"></a>问题的发现</h1><p>用 Arrays.asList 方法转化一 int 型数组为 List 类型</p>\n\n    <pre><code class=\"lang-java\"><span class=\"hljs-keyword\">import</span> java.util.Arrays;\n<span class=\"hljs-keyword\">import</span> java.util.List;\n\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Test</span> {</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(String[] args)</span> </span>{\n        <span class=\"hljs-keyword\">int</span> arr[] = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-keyword\">int</span>[]{<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>};\n        List <span class=\"hljs-built_in\">list</span> = Arrays.asList(arr);\n\n        System.out.println(<span class=\"hljs-string\">\"int array\"</span>);\n        System.out.println(<span class=\"hljs-built_in\">list</span>.size());\n        <span class=\"hljs-built_in\">list</span>.forEach(x -&gt; System.out.println(x));\n        <span class=\"hljs-comment\">/*  output:\n            int array\n            1\n            [I@16b98e56\n         */</span>\n    }\n}\n</code></pre>\n<p>如果按照一般的思维，转化后的 list 应该含有三个元素{1, 2, 3}，所以 size 自然也应该是3。但从实践来看，并不是如此。</p>\n<h1 id=\"原因解释\"><a href=\"#原因解释\" class=\"headerlink\" title=\"原因解释\"></a>原因解释</h1><p>首先查看 Arrays.asList 的源码</p>\n\n    <pre><code class=\"lang-java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> &lt;T&gt; <span class=\"hljs-function\">List&lt;T&gt; <span class=\"hljs-title\">asList</span>(<span class=\"hljs-params\">T... a</span>) </span>{\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> ArrayList&lt;&gt;(a);\n}\n</code></pre>\n<p>可以发现该方法传入的参数是一个可变长的参数。而问题的关键在于泛型。在 JAVA 中，基本数据类型是不能被泛型的。基本数据类型，即 primitive type，包含 8 种，具体可查看 <a href=\"https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html\" target=\"_blank\" rel=\"external\">Link</a> 。</p>\n<p>支持泛型的只能是对象。int 是基本数据类型，不能被泛型。而 int[] 是数组，数组在 JAVA 中属于对象，因此能被泛型。所以在最开始的代码中，list 仅包含一个元素，而这个元素即为 包含了 {1, 2, 3} 的数组。</p>\n<h1 id=\"解决方法\"><a href=\"#解决方法\" class=\"headerlink\" title=\"解决方法\"></a>解决方法</h1><h2 id=\"声明-List-类型为-List-lt-lt-int-gt-gt\"><a href=\"#声明-List-类型为-List-lt-lt-int-gt-gt\" class=\"headerlink\" title=\"声明 List 类型为 List&lt;&lt; int[] &gt;&gt;\"></a>声明 List 类型为 List&lt;&lt; int[] &gt;&gt;</h2>\n    <pre><code class=\"lang-java\"><span class=\"hljs-keyword\">import</span> java.util.Arrays;\n<span class=\"hljs-keyword\">import</span> java.util.List;\n\n<span class=\"hljs-keyword\">public</span> class Test {\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> main(<span class=\"hljs-keyword\">String</span>[] args) {\n        <span class=\"hljs-keyword\">int</span> arr[] = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-keyword\">int</span>[]{<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>};\n        List&lt;<span class=\"hljs-keyword\">int</span>[]&gt; list1 = Arrays.asList(arr);\n        System.out.<span class=\"hljs-built_in\">println</span>(list1.<span class=\"hljs-built_in\">get</span>(<span class=\"hljs-number\">0</span>).length);\n        Arrays.stream(list1.<span class=\"hljs-built_in\">get</span>(<span class=\"hljs-number\">0</span>)).forEach(x -&gt; System.out.<span class=\"hljs-built_in\">println</span>(x));\n        <span class=\"hljs-comment\">/*  output:\n            3\n            1\n            2\n            3\n         */</span>\n    }\n}\n</code></pre>\n<p>既然知道了list中仅有的元素是一个数组，那么只能将计就计，从列表取出是要多一个心眼，知道拿出的是数组。</p>\n<h2 id=\"将数组声明为-Integer-对象数组\"><a href=\"#将数组声明为-Integer-对象数组\" class=\"headerlink\" title=\"将数组声明为 Integer 对象数组\"></a>将数组声明为 Integer 对象数组</h2><p>Integer 属于对象，因此能被泛型，可以达到预期的效果。</p>\n\n    <pre><code class=\"lang-java\"><span class=\"hljs-keyword\">import</span> java.util.Arrays;\n<span class=\"hljs-keyword\">import</span> java.util.List;\n\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Test</span> {</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(String[] args)</span> </span>{\n        Integer arrIN[] = <span class=\"hljs-keyword\">new</span> Integer[]{<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>};\n        <span class=\"hljs-built_in\">list</span> = Arrays.asList(arrIN);\n        System.out.println(<span class=\"hljs-string\">\"Integer array\"</span>);\n        System.out.println(<span class=\"hljs-built_in\">list</span>.size());\n        <span class=\"hljs-built_in\">list</span>.forEach(x -&gt; System.out.println(x));\n        <span class=\"hljs-comment\">/*  output:\n            3\n            1\n            2\n            3\n         */</span>\n    }\n}\n</code></pre>\n<p>相对来讲这种方法跟满足预期要求。</p>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><ol>\n<li>Stack Overflow <a href=\"http://stackoverflow.com/questions/1467913/arrays-aslist-not-working-as-it-should\" target=\"_blank\" rel=\"external\">Arrays.asList() not working as it should?</a></li>\n<li><a href=\"http://www.cnblogs.com/chenssy/p/3890842.html\" target=\"_blank\" rel=\"external\">Java提高篇（三六）—–Java集合细节（二）：asList的缺陷</a></li>\n</ol>\n","categories":[],"tags":[{"name":"Java","path":"api/tags/Java.json"}]}