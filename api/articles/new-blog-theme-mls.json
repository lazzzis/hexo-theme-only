{"title":"创建了适用于 hexo 的一个主题 mls","slug":"new-blog-theme-mls","date":"2016-11-10T11:46:55.000Z","updated":"2017-07-30T05:48:51.000Z","comments":true,"excerpt":"","content":"<p>之前用的主题是基于 <a href=\"https://github.com/hexojs/hexo-theme-landscape\" target=\"_blank\" rel=\"external\">landscape</a>, 虽然这确实是一个不错的主题，使用上也没什么不便，但毕竟这是一个他人贡献的主题。我一直想试着自己做一个主题。之前也尝试在 landscape 上改，修改了一些颜色，对 CSS 做了一些简单修改，但布局没变，整体一眼还是能看出这是 landscape，并且因为我当时不熟悉 EJS 模板，对 Sass 及 CSS3 不是特别熟悉，所以有些功能的实现也完全不知道怎么做，比如一些透明效果的动画。</p>\n<p>最近一段时间，相对以前来说稍微不忙了点，所以趁这个机会试着做一个主题了。</p>\n<h1 id=\"一些教程\"><a href=\"#一些教程\" class=\"headerlink\" title=\"一些教程\"></a>一些教程</h1><h2 id=\"MarketSheet\"><a href=\"#MarketSheet\" class=\"headerlink\" title=\"MarketSheet\"></a>MarketSheet</h2><p><a href=\"http://marksheet.io/\" target=\"_blank\" rel=\"external\">MarketSheet</a> 这是一个 HTML/CSS/Sass 教程的网站。我主要用它学习 CSS。相比较于其它教程，我十分推荐这个教程。</p>\n<p>一是因为前期它不堆砌各种语法知识，所以前期比较简单，例子也比较多，比如最开始讲讲很基础简单的 color, size, 而不是上来就讲 margin, padding 等对新手来说不友好的点。如果前期语法太多，就比较容易在刚开始就犯糊涂，影响后面的学习。</p>\n<p>二是这个教程确实讲得清楚，比如对 <code>position</code> 属性的解释，比如以前我一直对 <code>relative</code>/<code>absolute</code>/ 不清楚，不知道<code>相对</code>是什么，<code>绝对</code> 是什么，但教程直接解释了 <code>relative</code> 是相对元素原先的位置，而 <code>absolute</code> 是相对已经对位的 parent 来说的。更多的内容可以参考网站。</p>\n<p>三是一些语法外的规则讲解，比如何时使用 class 和 id，如何在表示颜色的十六进制、rgba、hsl 的三者中抉择 等等。</p>\n<h2 id=\"Sass-amp-SCSS-Tutorial-for-Beginners\"><a href=\"#Sass-amp-SCSS-Tutorial-for-Beginners\" class=\"headerlink\" title=\"Sass &amp; SCSS Tutorial for Beginners\"></a>Sass &amp; SCSS Tutorial for Beginners</h2><p><a href=\"https://www.youtube.com/watch?v=sCbXTrsl7NU&amp;list=PL6gx4Cwl9DGBxQO2r_kmxn-0UqL_Rkj0t\" target=\"_blank\" rel=\"external\">Sass &amp; SCSS Tutorial for Beginners</a><br>同样的理由，刚开始就不要太麻烦，把基础牢固最重要。这个教程每节课就讲一个知识点，比如 extend 或 mixin, 而且一节课的内容不长，10 分钟左右。<br>学完之后再去转转其他教程，这时学习一些稍微高级点的知识点就会相对轻松些。</p>\n<h2 id=\"CREATE-AN-HEXO-THEME\"><a href=\"#CREATE-AN-HEXO-THEME\" class=\"headerlink\" title=\"CREATE AN HEXO THEME\"></a>CREATE AN HEXO THEME</h2><p><a href=\"http://www.codeblocq.com/2016/03/Create-an-Hexo-Theme-Part-1-Index/\" target=\"_blank\" rel=\"external\">CREATE AN HEXO THEME</a><br>这个就是从头到尾的一个 hexo theme 教程了，包括了从简单的首页开始，一直到最后的插入评论系统。应该说跟着这个教程做下来的话，搭建 hexo 博客的基本思路已经有了。自己主要做的就是稍微调整下布局，补充补充一些 CSS，这样一个基本功能的主题已经基本完成了。</p>\n<h1 id=\"一些开源框架-组件-插件\"><a href=\"#一些开源框架-组件-插件\" class=\"headerlink\" title=\"一些开源框架 / 组件 / 插件\"></a>一些开源框架 / 组件 / 插件</h1><h2 id=\"Materialize\"><a href=\"#Materialize\" class=\"headerlink\" title=\"Materialize\"></a>Materialize</h2><p><a href=\"https://github.com/Dogfalo/materialize\" target=\"_blank\" rel=\"external\">Materialize</a><br>一个实现了 Material design 的前端框架。之所以使用框架，一方面是想稍微偷个懒，因为目前我对如何实现响应式布局不是很了解，用现成的框架能降低难度，其次是我对 Material design 还是有点喜欢的，所以选择了这个框架。</p>\n<p>不过，并没有使用框架中太多部分，主要是导航栏，icons，以及内置的 grid 布局。</p>\n<h2 id=\"jquery-backstretch\"><a href=\"#jquery-backstretch\" class=\"headerlink\" title=\"jquery-backstretch\"></a>jquery-backstretch</h2><p><a href=\"https://github.com/srobbin/jquery-backstretch\" target=\"_blank\" rel=\"external\">jquery-backstretch</a><br>使用这个插件主要是两个理由，一是可以延迟加载背景图片，也就是说避免图片加载太慢而导致其它内容加载延迟太多。通过延迟加载，可以在其它加载了差不多了后再加载图片。二是在写主题时发现 chrome 的一个 bug，在我写了 <code>body {background-attachment: fixed}</code> 后，chrome 并没有照做，通过审查元素可以发现，chrome 自动在 body 上加了一个 <code>style=&quot;background-attachment: scroll&quot;</code>。虽然 google 了很多方法，但效果都不大理想。后来放弃了刚开始在 body 元素上设置背景的想法，而通过在其它元素上设置以间接达到目的。</p>\n<h2 id=\"highlight-js\"><a href=\"#highlight-js\" class=\"headerlink\" title=\"highlight.js\"></a>highlight.js</h2><p><a href=\"https://github.com/isagalaev/highlight.js\" target=\"_blank\" rel=\"external\">highlight.js</a><br>这个用于对代码的高亮。原先 hexo 的代码渲染很奇怪，它把代码部分渲染成了表格，而且用于代码高亮部分的主题的样式表我也看不懂。所以我这一次又偷懒了，关闭了默认的代码高亮（关闭方法不难，可参考 <a href=\"https://liuzhichao.com/2016/hexo-use-prettify-to-highlight-code.html\" target=\"_blank\" rel=\"external\">link</a>），使用了 highlight.js，而且这个组件提供了很多主题。我现在用的主题是 “Atom One Light”。这是一个我同样在 atom 上设置的亮色主题。</p>\n<h2 id=\"highlightjs-line-numbers-js\"><a href=\"#highlightjs-line-numbers-js\" class=\"headerlink\" title=\"highlightjs-line-numbers.js\"></a>highlightjs-line-numbers.js</h2><p><a href=\"https://github.com/wcoder/highlightjs-line-numbers.js\" target=\"_blank\" rel=\"external\">highlightjs-line-numbers.js</a><br>因为希望给代码显示行数，所以找到了这个插件，使用也很方便。</p>\n<h2 id=\"hexo-image-caption\"><a href=\"#hexo-image-caption\" class=\"headerlink\" title=\"hexo-image-caption\"></a>hexo-image-caption</h2><p><a href=\"https://github.com/wayou/hexo-image-caption\" target=\"_blank\" rel=\"external\">hexo-image-caption</a><br>在原先的 landscape 里，图片下方可以显示一段文字，这段文字就是在写 markdown 时插入图片时的说明文字。为了实现这个功能，我再次偷懒，搜到了这个插件。使用后的效果就是这样: <img src=\"http://placehold.it/350x150\" alt=\"这是一张 350 * 150 的图片？\"></p>\n<h2 id=\"fontawesome\"><a href=\"#fontawesome\" class=\"headerlink\" title=\"fontawesome\"></a>fontawesome</h2><p>一开始不知道一些图标是如何显示在 blog 上的，后来我知道了 <a href=\"http://fontawesome.io/\" target=\"_blank\" rel=\"external\">fontawesome</a>。使用没什么难度，效果可以参考现在页面 footer 上的那几个图标的样子，唯一我个人不满意的地方就在于没有网易云音乐的图标，所以用了一个其它图标代替。</p>\n<h2 id=\"share-js\"><a href=\"#share-js\" class=\"headerlink\" title=\"share.js\"></a>share.js</h2><p><a href=\"https://github.com/overtrue/share.js\" target=\"_blank\" rel=\"external\">share.js</a> 用于分享功能。这个功能原本不在计划之内，但在逛 GitHub 时偶然看到了，而且确实简单好用，于是加上了。目前我选择了四个社交应用的分享，显示在文章之后。</p>\n<h1 id=\"Thanks\"><a href=\"#Thanks\" class=\"headerlink\" title=\"Thanks\"></a>Thanks</h1><p>这次主题的创建比我想象的简单了很多，一个很重要的原因就在于 GitHub 上丰富的资源，包括各种教程，为我节省了很多精力和时间，<del>允许我偷懒</del>。我必须要向这些资源们的作者表示感谢。</p>\n<p>同时我不得不说，有些 blog 也带给了我一些灵感。jquery-backstretch 是我在看了<a href=\"xcoder.in\">艾克斯の編碼者</a>的 blog 才知道的，另外也从这个 blog 的主题上也知道了如何单独建立 Categories 和 Tags 的页面。同时， 网页下滑后导航栏透明的设计是在看了 <a href=\"http://wattlebird.github.io/\" target=\"_blank\" rel=\"external\">Dedication</a> 之后才想到要做。而在 footer 上加图标的方法则是参考了 <a href=\"http://morris821028.github.io/\" target=\"_blank\" rel=\"external\">Morris’ Blog</a> 的设计。</p>\n<h1 id=\"关于-mls\"><a href=\"#关于-mls\" class=\"headerlink\" title=\"关于 mls\"></a>关于 mls</h1><p>主题的代码这几天我会在 GitHub 上开源。</p>\n<p>至于为什么叫 mls，其实很简单，m 代表了 materialize 框架；ls 代表 landscape，代表了上一个主题，因为最初的想法不是从头写，而是想在 landscape 上修改。</p>\n","categories":[{"name":"Front-end","path":"api/categories/Front-end.json"}],"tags":[{"name":"JavaScript","path":"api/tags/JavaScript.json"},{"name":"CSS","path":"api/tags/CSS.json"},{"name":"Sass","path":"api/tags/Sass.json"}]}